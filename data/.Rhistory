# Columns to keep
keep<-c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F" )
# Select the keep columns
human<-select(human, one_of(keep))
# Remove all rows with missing values.
human_<-filter(human, complete.cases(human))
# Remove the observations which relate to regions instead of countries.
# Printing Country column to see which rows are countries and which are regions.
human_$Country
# The last 7 rows of the data set are regions, so they need to be removed.
# Define the last indice we want to keep
last<-nrow(human_)-7
# Choose everything until the last 7 observations
human_<-human_[1:last,]
# Define the row names of the data by the country names and remove the country name column
# from the data.
# Add countries as rownames
rownames(human_)<-human_$Country
# Remove the Country variable and then check the variables
human_<-select(human_, -Country)
dim(human_)
# The data should now have 155 observations and 8 variables, as it does
# Save the human data in your data folder including the row names, overwriting old human.txt
setwd("~/Desktop/IODS-project/data")
write.table(human_, file="human.txt")
human<-read.table("~/Tiedostot_J/IODS-project/data/human.txt", sep="", header=T)
human<-read.table("~/Tiedostot_J/IODS-project/data/human.txt", header=T)
human<-read.table("~/Tiedostot_J/IODS-project/data/human.txt", sep="", header=T)
human<-read.table("~/Desktop/IODS-project/data/human.txt", sep="", header=T)
# Johanna Troberg
# Data wrangling of human data
# United Nations Development Programme, Human Development Reports
# http://hdr.undp.org/en/content/human-development-index-hdi
# Read the “Human development” and “Gender inequality” datas into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Structure and dimensions of the datasets
str(hd)
dim(hd)
str(gii)
dim(gii)
# Create summaries of the variables.
summary(hd)
summary(gii)
# Look at the meta files
colnames(hd)
colnames(gii)
# Rename the variables with (shorter) descriptive names.
colnames(hd)[3]<-"HDI"
colnames(hd)[4]<-"Life.Exp"
colnames(hd)[5]<-"Edu.Exp"
colnames(hd)[6]<-"Edu.Mean"
colnames(hd)[7]<-"GNI"
colnames(hd)[8]<-"GNI.Minus.Rank"
colnames(gii)[3]<-"GII"
colnames(gii)[4]<-"Mat.Mor"
colnames(gii)[5]<-"Ado.Birth"
colnames(gii)[6]<-"Parli.F"
colnames(gii)[7]<-"Edu2.F"
colnames(gii)[8]<-"Edu2.M"
colnames(gii)[9]<-"Labo.F"
colnames(gii)[10]<-"Labo.M"
# Mutate the “Gender inequality” data and create two new variables, the first ratio female/male
# with secondary education in each country (i.e. edu2F / edu2M)
gii<-mutate(gii, Edu2.FM=(Edu2.F/Edu2.M))
# The second new variable should be the ratio of labour force participation
# of females and males in each country (i.e. labF / labM)
gii<-mutate(gii, Labo.FM=(Labo.F/Labo.M))
# Join together the two datasets using the variable Country as the identifier, keeping
# only the countries in both data sets.
# For function inner_join() the dplyr package needs to be loaded.
library(dplyr)
join_by<-c("Country")
hd_gii<-inner_join(hd, gii, by =join_by, suffix=c(".hd", ".gii"))
glimpse(hd_gii)
# The joined data should have 195 observations and 19 variables, as it does.
# Call the new joined data "human" and save it in your data folder
setwd("~/Desktop/IODS-project/data")
write.table(hd_gii, file="human.txt")
# Read the human data from local data folder into r for further data wrangling.
human<- read.table("~/Desktop/IODS-project/data/human.txt", sep="", header=T)
str(human)
# Mutate the data by transforming the GNI variable to numeric.
# To keep numbers correct, the commas need to be removed from GNI column.
# Stringr and tidyr packages are loaded first
library(stringr)
library(tidyr)
human$GNI<-str_replace(human$GNI, pattern=",", replace="")%>%as.numeric(human$GNI)
# Exclude unneeded variables keeping only the columns: "Country", "Edu2.FM", "Labo.FM",
# "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F"
# Columns to keep
keep<-c("Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F" )
# Select the keep columns
human<-select(human, one_of(keep))
# Remove all rows with missing values.
human_<-filter(human, complete.cases(human))
# Remove the observations which relate to regions instead of countries.
# Printing Country column to see which rows are countries and which are regions.
human_$Country
# The last 7 rows of the data set are regions, so they need to be removed.
# Define the last indice we want to keep
last<-nrow(human_)-7
# Choose everything until the last 7 observations
human_<-human_[1:last,]
# Define the row names of the data by the country names and remove the country name column
# from the data.
# Add countries as rownames
rownames(human_)<-human_$Country
# Remove the Country variable and then check the variables
human_<-select(human_, -Country)
dim(human_)
# The data should now have 155 observations and 8 variables, as it does
# Save the human data in your data folder including the row names, overwriting old human.txt
setwd("~/Desktop/IODS-project/data")
write.table(human_, file="human.txt")
# Week 5
This week we have used the data from
```{r}
# Load the human.txt data into R.
human<-read.table("~/Desktop/IODS-project/data/human.txt", sep="", header=T)
# Explore the structure and the dimensions of the data
str(human)
dim(human)
```
describe the dataset briefly, assuming the reader has no previous knowledge of it (this is now close to the reality, since you have named the variables yourself).
human_
str(human_)
str(human_)
human<-read.table("~/Desktop/IODS-project/data/human.txt", sep="", header=T)
str(human_)
str(human)
human_data<-read.table("~/Desktop/IODS-project/data/human.txt", sep="", header=T)
str(human_data)
dim(human_)
write.table(human_, file="human.txt")
human_data<-read.table("~/Desktop/IODS-project/data/human.txt", sep="", header=T)
str(human_data)
human<-read.table("~/Desktop/IODS-project/data/human.txt", sep="", header=T)
str(human)
human2<-read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep=",", header=T")
str(human2)
str(human2)
human2<-read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep=",", header=T")
human2<-read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep=",", header=T")
human2<-read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep=",", header=T)
human2<-read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep=",", header=T)
str(human2)
human2<-read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep=",", header=T)
str(human2)
rownames(human)
colnames(human)
summary(human)
rownames(human)
ggpairs(human)
library(GGally)
ggpairs(human)
cor(human_)%>%corrplot()
library(corrplot)
cor(human_)%>%corrplot()
gather(human)
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
library(ggplot2)
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_scatter()
gather(human)%>%ggplot(aes(value))+facet_grid("key"", scales="free")+geom_scatter()
gather(human)%>%ggplot(aes(value))+facet_grid("key", scales="free")+geom_scatter()
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_scatter()
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
gather(human)%>%ggplot(aes(value))+facet_grip("key", scales="free")+geom_bar()
gather(human)%>%ggplot(aes(value))+facet_grip(, scales="free")+geom_bar()
gather(human)%>%ggplot(aes(value))+facet_grid(, scales="free")+geom_bar()
gather(human)%>%ggplot(aes(value))+facet_grid("key", scales="free")+geom_bar()
gather(human)%>%ggplot(aes(value))+facet_grid("value", scales="free")+geom_bar()
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
ggplot(aes(value))+facet_wrap("human, scales="free")+geom_bar()
ggplot(aes(value))+facet_wrap("human", scales="free")+geom_bar()
ggplot(aes(value))+facet_wrap(human, scales="free")+geom_bar()
ggplot(human, aes(value))+facet_wrap(human, scales="free")+geom_bar()
g1<- ggplot(human, aes(value))
g1<- ggplot(human, aes(value))
g1+geom_bar()
g1<- ggplot(human)
g1+geom_bar()
g1<- ggplot(human)
g1+geom_bar()
g1<- ggplot(human, aes(x, y=Edu2.FM))
g1+geom_bar()
g1<- ggplot(human, aes(x, y=Edu2.FM))
g1+geom_bar()
library(ggplot2)
g1<- ggplot(human, aes(x, y=Edu2.FM))
g1+geom_bar()
g1
1<- ggplot(human, aes(x, y=Edu2.FM))
human_g<-gather(human)
ggplot(human_g, aes(value), +facet_wrap("key", scales="free")+geom_bar()
ggplot(human_g, aes(value)), +facet_wrap("key", scales="free")+geom_bar()
ggplot(human_g, aes(value)) +facet_wrap("key", scales="free")+geom_bar()
human_g<-gather(human)
ggplot(human_g, aes(value)) +facet_wrap("key", scales="free")+geom_bar()
human_g<-as.numeric(human_g)
glimpse(human_g)
summary(human_g)
gplot(human_g, aes(value)) +facet_wrap("key", scales="free")+geom_bar()
ggplot(human[1], aes(hwy, cty))
ggplot(human, aes(,human$Edu2.FM))
ggplot(human, aes(,human$Edu2.FM))+geom_bar()
ggplot(human, aes(,human$Edu2.FM))+geom_bar
ggplot(human, aes(x,y=human$Edu2.FM))+geom_bar
ggplot(human, aes(x,y=human$Edu2.FM))+geom_bar()
ggplot(human, aes(x=row_number(),y=human$Edu2.FM))+geom_bar()
ggplot(human, aes(,y=human$Edu2.FM))+geom_bar()
ggplot(human, aes(x=row(),y=human$Edu2.FM))+geom_bar()
ggplot(human, aes(x=row(1:155),y=human$Edu2.FM))+geom_bar()
ggplot(human, aes(x=1:155,y=human$Edu2.FM))+geom_bar()
ggplot(human, aes(x=row.names(1:155),y=human$Edu2.FM))+geom_bar()
ggplot(human, aes(x=1:155,y=human$Edu2.FM))+geom_bar()
ggplot(human, aes(1:155,y=human$Edu2.FM))+geom_bar()
ggplot(human, aes(objects(human),y=human$Edu2.FM))+geom_bar()
summarise(human)
summarise(human)
summarise(human)
# Week 5
This week we have used the data from United Nations Development Programme, Human Development Reports ([hdr.undp.org](http://hdr.undp.org/en/content/human-development-index-hdi)).
From the reports, the two datasets of Human Development Index (HDI) and Gender Inequality Index were downloaded, combined, and some data variables were selected for this week's analysis exercise.
```{r}
# Load the human.txt data into R.
human<-read.table("~/Desktop/IODS-project/data/human.txt", sep="", header=T)
# Explore the structure and the dimensions of the data
str(human)
dim(human)
```
In our dataset we have 155 objects and 8 variables, so we have 155 rows (different countries) and 8 columns. All the variables are recogniced as numerical, most of them have decimal values, but the GNI and Mat.Mor are integers. The chosen 8 variables (column heading abbreviations) from larger data set describe following things:
1. The proportion of females divided with proportion of males with at least secondary education (Edu2.FM).
2. The proportion of females divided with the proportion of males in the labour force. (Labo.FM)
3. Expected years of schooling for children of school entering age (Edu.Exp)
4. Life expectancy at birth (Life.Exp)
5. Gross national income per capita (GNI)
6. Maternal mortality ratio (Mat.Mor)
7. Adolescent birth rate (Ado.Birth)
8. Percetange of female representatives in parliament (Parli.F)
```{r}
# Show a graphical overview of the data
# Access to ggplot2 and tidyr
library(ggplot2)
library(tidyr)
# Drawing a bar plot of each variable
summarise(human)
```
and show summaries of the variables in the data. Describe and interpret the outputs, commenting on the distributions of the variables and the relationships between them. (0-2 points)
summary(human)
summary(human)%>%gplot()
human_scaled<-scale(human)
summary(human_scaled)
g1<-gplot(human_scaled)
library(ggplot2)
library(tidyr)
# For easier overview of the data, the data set is scaled.
human_scaled<-scale(human)
# Drawing a bar plot of each variable of scaled data.
g1<-gplot(human_scaled)
g1<-ggplot(human_scaled)
human_scaled<-scale(human)
g1<-ggplot(human_scaled)
class(human_scaled)
human_scaled<-as.data.frame(human_scaled)
g1<-ggplot(human_scaled)
g1
ggplot(human_scaled)
ggplot(human_scaled)+geom_bar()
ggplot(human_scaled, aes(x,y))+geom_bar()
human_scaled
gather(human_scaled)%>%ggplot(aes(fl))
gather(human_scaled)%>%ggplot()
gather(human_scaled)%>%ggplot()+geom_bar()
gather(human_scaled)%>%ggplot()
g1<-gather(human_scaled)%>%ggplot()
g1+geom_bar()
g1<-gather(human_scaled)%>%ggplot(aes(nrow,ncol()))
g1+geom_bar()
g1<-gather(human_scaled)%>%ggplot(aes(nrow,ncol))
g1+geom_bar()
ggplot(g1)
g1<-gather(human_scaled)
ggplot(g1)
g1+geom_bar()
ggplot(human_scaled, aes(n,y))+geom_bar()
ggplot(human_scaled, aes(n,human$Edu2.FM))+geom_bar()
ggplot(human_scaled, aes(nrow(1:155),human$Edu2.FM))+geom_bar()
ggplot(human_scaled, aes(nrow("1:155"),human$Edu2.FM))+geom_bar()
g1<-gather(human_scaled)%>%as.numeric(human_scaled)
class(human_scaled)
class(human_scaled)
g1<-gather(human_scaled)
human_scaled<-as.data.frame(human_scaled)
human_scaled<-scale(human)
class(human_scaled)
human_scaled<-as.data.frame(human_scaled)
class(human_scaled)
human_scaled<-as.numeric(human_scaled)
human_scaled<-as.data.frame(human_scaled)
gather(human_scaled)%>%glimpse
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
ggplot(human), aes(nrow("1:155"),human$Edu2.FM))+geom_bar()
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
human_scaled<-scale(human)
class(human_scaled)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
class(human_scaled)<-as.data.frame(human_scaled)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
human_scaled<-scale(human)
class(human_scaled)<-as.data.frame(human_scaled)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
str(human_scaled)
str(human_scaled)
dim(human_scaled)
str(human_scaled)
str(human)
human_scaled<-as.data.frame(human_scaled)
human_scaled<-scale(human)
human_scaled<-as.data.frame(human_scaled)
str(human_scaled)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free")+geom_bar()
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales=x="key", y="free")+geom_bar()
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_bar()
str(human_scaled)
str(human)
str(human)
g1<-ggplot(human, aes(human$Edu2.FM))
g1
g1<-ggplot(human, aes(nrow(human),human$Edu2.FM))
g1
n<-nrow(human)
g1<-ggplot(human, aes(n,human$Edu2.FM))
g1
g1+geom_bar()
g1<-ggplot(human, aes(n,human$Edu2.FM))
g1+geom_bar()
g1<-ggplot(human, aes(n,human$Edu2.FM))+geom_bar()
g1
g1+geom_bar
n<-nrow(human)
g1<-ggplot(human, aes(n,human$Edu2.FM))
g1+geom_bar
g1+geom_bar()
g1<-ggplot(data=human, aes(y=human$Edu2.FM))
g1+geom_bar()
g1<-ggplot(data=human$Edu2.FM, aes(y=human$Edu2.FM))
g1+geom_bar()
g1<-ggplot(data=human,FM, aes(x=n,y=Edu2.FM))
g1<-ggplot(data=human,FM, aes(x=Edu2.FM))
g1<-ggplot(data=human,FM, aes(x="Edu2.FM"))
g1<-ggplot(data=human, aes(x=Edu2.FM))
g1+geom_bar()
g1<-ggplot(data=human, aes(y=Edu2.FM))
g1+geom_bar()
g1<-ggplot(data=human, aes(x=n))
g1+geom_bar()
g1<-ggplot(data=human, aes(x=nrow(human)))
g1+geom_bar()
g1<-ggplot(data=human_scaled, aes(x=nrow(human)))
g1+geom_bar()
g1<-ggplot(data=human_scaled, aes(x=nrow(human_scaled)))
g1+geom_bar()
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_bar()
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_bar()
str(human)
str(human_scaled)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_bar()
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram()
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram()
human_scaled<-scale(human)
human_scaled<-scale(human)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram()
human_scaled<-as.data.frame(human_scaled)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram()
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", bins=10)+geom_histogram()
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=10)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=50)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)
human_scaled<-scale(human)%>%as.data.frame(human_scaled)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)
gather(human_scaled)%>%ggplot(aes(value), color="red")+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)
gather(human_scaled)%>%ggplot(aes(value), color="red")+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, scale_fill_gradientn(colours = terrain.colors(6))
gather(human_scaled)%>%ggplot(aes(value), color="red")+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, scale_fill_gradientn(colours = terrain.colors(6)))
gather(human_scaled)%>%ggplot(aes(value), color="red")+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)
gather(human_scaled)%>%ggplot(aes(value), color=qsec)+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)
gather(human_scaled)%>%ggplot(aes(value), color=red)+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)
gather(human_scaled)%>%ggplot(aes(value), color=value)+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)
gather(human_scaled)%>%ggplot(aes(value), color=key)+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)
gather(human_scaled)%>%ggplot(aes(value), color=key)+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)+scale_fill_gradient(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value), fill=..count..)+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)+scale_fill_gradient(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)+scale_fill_gradient(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y",4:2)+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y",2:4)+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y",2:4)+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", 2:4)+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", 4:2)+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", 4:2)+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", 2:4)+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", 2:4)+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", 2:4, scales="free_y")+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155)+scale_color_continuous(low="blue", high="red")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col=blue)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="blue")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="blues")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkblue")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", center)+geom_histogram(bins=155, col="darkblue")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", center)+geom_histogram(bins=155, col="darkblue")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", xlim(c(18,52)))+geom_histogram(bins=155, col="darkblue")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkblue")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", xlim(c(-6,6)))+geom_histogram(bins=155, col="darkblue")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkblue",xlim(c(18,52)))
gather(human_scaled)%>%ggplot(aes(value), xlim(c(18,52)))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkblue",)
gather(human_scaled)%>%ggplot(aes(value), xlim(c(-6,6)))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkblue",)
gather(human_scaled)%>%ggplot(aes(value, xintercept=0), xlim(c(-6,6)))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkblue",)
gather(human_scaled)%>%ggplot(aes(value, xintercept=0))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkblue",)
gather(human_scaled)%>%ggplot(aes(value, xintercept=0))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col=cond,)
gather(human_scaled)%>%ggplot(aes(value, xintercept=0))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col=cond)
gather(human_scaled)%>%ggplot(aes(value, xintercept=0))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="cond")
gather(human_scaled)%>%ggplot(aes(value, xintercept=0))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col=darkred)
gather(human_scaled)%>%ggplot(aes(value, xintercept=0))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkred")
gather(human_scaled)%>%ggplot(aes(value, xcentered=0))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkred")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y")+geom_histogram(bins=155, col="darkred")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", scale_x_continuous(limits = c(-6, 6)))+geom_histogram(bins=155, col="darkred")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales=xlim(-6, 6),"free_y", )+geom_histogram(bins=155, col="darkred")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales=(-6:6),"free_y", )+geom_histogram(bins=155, col="darkred")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", )+geom_histogram(bins=155, col="darkred")+xlim(-6, 6)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", )+geom_histogram(bins=155, col="darkred")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", )+geom_histogram(bins=155, col="darkred")+xlim(-6, 6)
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", )+geom_histogram(bins=155, col="darkred")+xlim(-6, 6)
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", )+geom_histogram(bins=155, col="darkred")
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free", )+geom_histogram(bins=155, col="darkred")
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", )+geom_histogram(bins=155, col="darkblue")+xlim(-6,6)
human_scaled<-scale(human)%>%as.data.frame(human_scaled)
human_scaled<-scale(human)%>%as.data.frame(human_scaled)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", )+geom_histogram(bins=155, col="darkblue")+xlim(-6,6)
human_scaled<-scale(human)%>%as.data.frame(human_scaled)
gather(human)%>%ggplot(aes(value))+facet_wrap("key", scales="free", )+geom_histogram(bins=155, col="darkred")
library(ggplot2)
library(tidyr)
human_scaled<-scale(human)
human_scaled<-as.data.frame(human_scaled)
human_scaled<-scale(human)
human_scaled<-scale(human)
human_scaled<-as.data.frame(human_scaled)
gather(human_scaled)%>%ggplot(aes(value))+facet_wrap("key", scales="free_y", )+geom_histogram(bins=155, col="darkblue")+xlim(-6,6)
summary(human_scaled)
summary(human)
distribution(human)
glimpse(human)
mean(human)
cor(human)%>%corrplot(order ="AOE", method="color")
cor(human)%>%corrplot(order ="AOE", method="color", type=upper)
cor(human)%>%corrplot(order ="AOE", method="color", type="upper")
cor(human)%>%corrplot(order ="hclust", method="color", type="upper")
ggpairs(human)
cor(human)%>%corrplot(order ="hclust", method="color", type="upper")
cor(human)%>%corrplot(order ="hclust", method="color")
cor(human)%>%corrplot(order ="hclust", method="color", type="lower")
pca_human<-prcomp(human)
biplot(pca_human, choices=1:2, cex=c(0.8,1), col=("grey40", "deepblue"))
pca_human<-prcomp(human)
pca_human<-prcomp(human)
biplot(pca_human, choices=1:2, cex=c(0.8,1), col=("grey40", "deepblue"))
biplot(pca_human, choices=1:2, cex=c(0.8,1), col=("deepblue"))
biplot(pca_human, choices=1:2, cex=c(0.8,1), col=("grey40", "deeppink2"))
biplot(pca_human, choices=1:2, cex=c(0.8,1), col=c("grey40", "deeppink2"))
s<-summary(pca_human)
s<-summary(pca_human)%>%s
s<-summary(pca_human)
s
pca_pr<-round(1*s$importance[2,]*100, digits=1)
pca_pr
pca_pr<-round(1*s$importance[2,]*100, digits=2)
pca_pr
pc_lab<-paste0(names(pca_pr), "C", pca-pr, "%)")
pc_lab<-paste0(names(pca_pr), "C", pca_pr, "%)")
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA)
pc_lab<-paste0(names(pca_pr), "(", pca_pr, "%)")
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA)
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, label="Biplot using not standardized human data")
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, title="Biplot using not standardized human data")
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, main="Biplot using not standardized human data")
suppressWarnings(arrows(1,2,3,4,5)
biplot(pca_human, choices=1:2, cex=c(0.8,1), col=c("grey40", "deeppink2"))
suppressWarnings(arrows(1:5)
suppressWarnings(arrows(1,2,3,4,5))
biplot(pca_human, choices=1:2, cex=c(0.8,1), col=c("grey40", "deeppink2"))
suppressWarnings(arrows(0,0,0,0))
biplot(pca_human, choices=1:2, cex=c(0.8,1), col=c("grey40", "deeppink2"))
suppressWarnings(arrows(0,0,0,0))
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, main="Biplot using not standardized human data")
suppressWarnings(arrows(0,0,0,0))
suppressWarnings(arrows(0,0,0,0))
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, main="Biplot using not standardized human data")
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, main="Biplot using not standardized human data")
suppressWarnings(arrows())
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, main="Biplot using not standardized human data")
suppressWarnings(arrows(0,0,0,0))
suppressWarnings(arrows(lenght=0))
suppressWarnings(arrows(,,,lenght=0))
suppressWarnings(arrows(0,0,0,0, lenght=0))
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, main="Biplot using not standardized human data")
suppressWarnings(arrows(0,0,0,0, lenght=0))
biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, main="Biplot using not standardized human data")
suppressWarnings(arrows(0,0,0,0, lenght=0))
suppressWarnings(biplot(pca_human, cex=c(0.8,1), col=c("grey40", "deeppink2"), xlab=pc_lab, ylab=NA, main="Biplot using not standardized human data"))
