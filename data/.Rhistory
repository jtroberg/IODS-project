#Accessing ggplot2 library
library(ggplot2)
# initialize plot with data and aesthetic mapping
p1 <- ggplot(students2014, aes(x = attitude, y = points, col = gender))
# define the visualization type (points)
p2 <- p1 + geom_point()
# draw the plot
p2
# draw a scatter plot matrix of the variables in learning2014.
# [-1] excludes the first column (gender)
pairs(students2014[-1], col=students2014$gender)
```
install.packages("ggally")
install.packages("ggally")
install.packages("GGally")
install.packages("GGally")
library(ggplot2, GGally)
# Reading the data into R (students2014) from the  local data wrangling file (learning2014.txt). Setting the header=TRUE because file contains the names of the variables as its first line.
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
#Analysis of the data (structure and summary)
str(students2014)
head(students2014)
summary(students2014)
Print(summary(students2014))
math<-read.table("student-mat.csv", sep=";", header=TRUE)
por<-read.table("student-por.csv", sep=";", header=TRUE)
str(math)
dim(math)
str(por)
dim(por)
setwd("~/Desktop")
setwd("~/Desktop/IODS-project/data")
# Johanna Troberg
# 9.2.2017
# Data set of student alcohol consumption downloaded from The UCI Machine Learning Repository, https://archive.ics.uci.edu/ml/datasets/STUDENT+ALCOHOL+CONSUMPTION
# Read student-mat.csv and student-por.csv into R. These files are saved under same folder than current working directory is, so they can be called by their filename.
math<-read.table("student-mat.csv", sep=";", header=TRUE)
por<-read.table("student-por.csv", sep=";", header=TRUE)
# Explore the structure and dimensions of the data.
str(math)
dim(math)
str(por)
dim(por)
#There are 395 objects and 33 variables in the math-file. Most of the variables are integers, but some are factors (answered by no/yes).
colnames(math)
colnames(por)
library(dplyr)
?inner_join
math_por<-inner.join(math, por, by=join_by, suffix=c(".math", ".por"))
library(dplyr)
math_por<-inner.join(math, por, by=join_by, suffix=c(".math", ".por"))
colnames(math_por)
math_por<-inner.join(math, por, by=join_by, suffix=c(".math", ".por"))
# Johanna Troberg
# 9.2.2017
# Data set of student alcohol consumption downloaded from The UCI Machine Learning Repository, https://archive.ics.uci.edu/ml/datasets/STUDENT+ALCOHOL+CONSUMPTION
# Read student-mat.csv and student-por.csv into R. These files are saved under same folder than current working directory is, so they can be called by their filename.
math<-read.table("student-mat.csv", sep=";", header=TRUE)
por<-read.table("student-por.csv", sep=";", header=TRUE)
# Explore the structure and dimensions of the data.
str(math)
dim(math)
str(por)
dim(por)
# There are 395 objects and 33 variables in the math-file. Most of the variables are integers, but some are factors (answered by no/yes).
# There are 649 objects and 33 variables in the por-file. The questions are the same than in mat, but there are more students answering to questionare in this datafile.
# Join 2 data sets using variables "school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", and "internet" as identifiers.
# Identifiers are needed because we want to find the duplicates (persons that have taken the questionnaire twice, and can be found in both math and por data files.)
# Identifiers are questions (columns) that are very likely answered in the same way in both question times.
# First we need an access to dplyr library (enables inner.join())
library(dplyr)
# Telling which columns are the identifiers
join_by<-c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
# Creating one data set from the 2 data sets by join_by identifiers.
# The inner.join will return all rows from "math" where there are matching values in "por", and all columns from "math" and "por".
math_por<-inner.join(math, por, by=join_by, suffix=c(".math", ".por"))
colnames(math_por)
# Finding the students who answered in both questionnaires.
#Keep only the students present in both data sets.
#Explore the structure and dimensions of the joined data. (1 point)
math_por <- inner_join(math, por, by = join_by, suffix=c(".math", ".por"))
math_por<-inner.join(math, por, by=join_by, suffix=c(".math", ".por"))
colnames(math_por)
math_por <- inner_join(math, por, by = join_by, suffix=c(".math", ".por"))
colnames(math_por)
str(math_por); dim(math_por)
colnames(math_por)
glilmpse(math_por)
glimpse(math_por)
colnames(math)
colnames(math_por)
colnames(por)
# Johanna Troberg
# 9.2.2017
# Data set of student alcohol consumption downloaded from The UCI Machine Learning Repository, https://archive.ics.uci.edu/ml/datasets/STUDENT+ALCOHOL+CONSUMPTION
# Read student-mat.csv and student-por.csv into R. These files are saved under same folder than current working directory is, so they can be called by their filename.
math<-read.table("student-mat.csv", sep=";", header=TRUE)
por<-read.table("student-por.csv", sep=";", header=TRUE)
# Explore the structure and dimensions of the data.
str(math); dim(math)
str(por); dim(por)
# There are 395 objects and 33 variables in the math-file. Most of the variables are integers, but some are factors (answered by no/yes).
# There are 649 objects and 33 variables in the por-file. The questions are the same than in mat, but there are more students answering to questionare in this datafile.
# Join 2 data sets using variables "school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", and "internet" as identifiers.
# Identifiers are needed because we want to find the duplicates (persons that have taken the questionnaire twice, and can be found in both math and por data files.)
# Identifiers are questions (columns) that are very likely answered in the same way in both question times.
# First we need an access to dplyr library (enables inner.join())
library(dplyr)
# Telling which columns are the identifiers
join_by<-c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
# Creating one data set from the 2 data sets by join_by identifiers.
# The inner_join will return all rows from "math" where there are matching values in "por", and all columns from "math" and "por".
# So this gives the students who answered in both questionnaires (math_por).
math_por <- inner_join(math, por, by = join_by, suffix=c(".math", ".por"))
# Studying the structure and dimensions of the joined data
str(math_por); dim(math_por)
# The combined data file has now 382 objects and 53 variables. The number of variables is increased, because we have now the same questions but from two different
# sources. So if we had (33+33 questions in the beginning, we told that 13 of them are identifiers what makes 33+33-13=53).
alc <-select(math_por, one_of(join_by))
notjoined_columns<-colnames(math)[!colnames(math)%in%join_by]
notjoined_columns
# First starting new combined data set named alc. First the joined columns are put here.
alc <-select(math_por, one_of(join_by))
# Calling the not joined columns for combination (then making for them for if-else structure)
notjoined_columns<-colnames(math)[!colnames(math)%in%join_by]
for(column_name in notjoined_columns){
# select 2 columns with combined data file with same original name
two_columns<-select(math_por, starts_with (column_name))
# select first column vector of two columns
first_column<-select(two_columns, 1)[[1]]
#if it is numeric...
if (is.numeric(first_column)){
#...take an average of each row and add it to data frame,
alc[column_name]<-round(rowMeans(two_columns))
# else if not numeric, add the first column vector to data frame.
}else{alc[column_name]<-first_column}}
glimpse(alc)
# Johanna Troberg
# 9.2.2017
# Data set of student alcohol consumption downloaded from The UCI Machine Learning Repository, https://archive.ics.uci.edu/ml/datasets/STUDENT+ALCOHOL+CONSUMPTION
# Read student-mat.csv and student-por.csv into R. These files are saved under same folder than current working directory is, so they can be called by their filename.
math<-read.table("student-mat.csv", sep=";", header=TRUE)
por<-read.table("student-por.csv", sep=";", header=TRUE)
# Explore the structure and dimensions of the data.
str(math); dim(math)
str(por); dim(por)
# There are 395 objects and 33 variables in the math-file. Most of the variables are integers, but some are factors (answered by no/yes).
# There are 649 objects and 33 variables in the por-file. The questions are the same than in mat, but there are more students answering to questionare in this datafile.
# Join 2 data sets using variables "school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", and "internet" as identifiers.
# Identifiers are needed because we want to find the duplicates (persons that have taken the questionnaire twice, and can be found in both math and por data files.)
# Identifiers are questions (columns) that are very likely answered in the same way in both question times.
# First we need an access to dplyr library (enables inner.join())
library(dplyr)
# Telling which columns are the identifiers
join_by<-c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet")
# Creating one data set from the 2 data sets by join_by identifiers.
# The inner_join will return all rows from "math" where there are matching values in "por", and all columns from "math" and "por".
# So this gives the students who answered in both questionnaires (math_por).
math_por <- inner_join(math, por, by = join_by, suffix=c(".math", ".por"))
# Studying the structure and dimensions of the joined data
str(math_por); dim(math_por)
# The combined data file has now 382 objects and 53 variables. The number of variables is increased, because we have now the same questions but from two different
# sources. So if we had 33+33 questions in the beginning, we told that 13 of them are identifiers what makes 33+33-13=53.
# To combine the duplicate answers from the joined data if-else structure is used. If the answer for question is numeric, a mean value is taken, but if it is a factor, the first answer will be picked and another one ignored.
# First starting new combined data set named alc. First the joined columns are put here.
alc <-select(math_por, one_of(join_by))
# Calling the not joined columns for combination (then making for them for if-else structure)
notjoined_columns<-colnames(math)[!colnames(math)%in%join_by]
for(column_name in notjoined_columns){
# select 2 columns with combined data file with same original name
two_columns<-select(math_por, starts_with (column_name))
# select first column vector of two columns
first_column<-select(two_columns, 1)[[1]]
#if it is numeric...
if (is.numeric(first_column)){
#...take an average of each row and add it to data frame,
alc[column_name]<-round(rowMeans(two_columns))
# else if not numeric, add the first column vector to data frame.
}else{alc[column_name]<-first_column}}
alc<-mutate(alc, alc_use=(Dalc+Walc)/2)
alc<-mutate(alc, high_use=alc_use>2)
Glimpse(alc)
glimpse(alc)
write.table(alc, file=alc.txt, sep=",", header=TRUE)
write.table(alc, file="alc.txt", sep=",", header=TRUE)
write.table(alc, file="alc.txt", sep=",", header=TRUE)
write.table(alc, file="alc.txt")
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
setwd("~/Desktop/IODS-project/data")
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
setwd("~/Tiedostot_J/IODS-project/data")
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
setwd("~/Desktop/IODS-project/data")
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
# Week 2
In this week's R exercise we are making the regression analysis from the questionare data about students' learning methods (deep and surface learning) and attitudes toward the learning progress and study subject. The answers are scaled and combined together with final exam points, overall attitudes toward statistics, gender and age.
Before the analysis, we did data wrangling step (where the data table is converted into different type of file for analysis), and in this step the data was already filtered so that those answers that got 0 points are left out from the data table, the deep, strategic and learning question points were averiged and the attitude points were divided by the number of questions (about attitude).
**Tables 1-3. Data tables about summary of data and its structure.** Data table has seven different variables. The first variable is gender, which can be either female or male. The next one is age, and has integer value, as well as the exam points in the table. Other points in the table are averiged values from the multiple questions from that spesific topic.
```{r}
# Reading the data into R (students2014) from the  local data wrangling file (learning2014.txt). Setting the header=TRUE because file contains the names of the variables as its first line.
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
#Analysis of the data (structure and summary)
str(students2014)
head(students2014)
summary(students2014)
```
**Plot 1.** To summarize we have made a plot for attitude vs exam points. These results are divided on two colours based on the gender and lastly regression line is drawn to the plot to visualize if there is a gender difference.
```{r}
#Accessing libraries ggplot2 and GGally
library(ggplot2)
library(GGally)
#  Plot with ggplot (aes)
p1 <- ggplot(students2014, aes(x = attitude, y = points, col = gender))
#  point visualization
p2 <- p1 + geom_point()
# adding a regression line
p3 <- p2 + geom_smooth(method = "lm")
# adding a title and drawing the plot
p4 <- p3 + ggtitle("Student's attitude vs exam points")
# printing the plot
p4
```
**Plot 2.** Plot about the summaries of the variables in the data. In this plot there is easily seen the different relationships between the variables.
```{r}
# Drawing plot matrix with ggpairs()
p <- ggpairs(students2014, mapping = aes(col=gender, alpha=2), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
```
**Table 4.** In this table, there is actual linear regression model for multiple variables used. The exam points are the target of the analysis and it gives the model to us as well as the details about the residuals in the model. From coefficients we can see where it crosses the Y-axis (points, intercept) and the model also estimates for each variable, if it is significant from zero. In other words, does that variable make a difference to the points (P and t values). The attitude seems to have the highest impact to exam points between these three variables.
The multiple R squared of the model tells us how well this data fits into multiple linear regression model. It determines how well the residuals fit the theoretical model values. More we have outliers from the model, the lower we have R squared value of the model telling us that some other model would be needed to explain our data. In our case, it seems that there is quite a lot variability of the data, meaning that it is not that strong dependence on the exam points and between attitude, age and strategic learning.
```{r}
# creating a regression model with multiple explanatory variables
my_model <- lm(points ~ attitude + age + stra, data = students2014)
# print out a summary of the model
summary(my_model)
```
**Plot 3.** Analysis of these diagnostic plots shows in the first plot again how well the residuals are corresponding the model fitted values. It should be scattered and not showing any kind of trend in this plot. The second plot is about normal QQ which is normality of errors. It should show no trend again going on some direction from the trendline. The third plot is about the leverage and residuals, and it takes into account that some residuals might have a larger effect on a model fitting than other. For example, large values might have larger effect than smaller ones when regression curve is fitted.
```{r}
# drawing diagnostic plots with plot(). Choosing the plots 1, 2 and 5. Par to show multiple plots at the same time (room for four plots, only 3 used here)
par(mfrow=c(2,2))
plot(my_model, which=c(1:2,5))
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
#Johanna Troberg, 30.1.2017, Rstudio exercise 2, data wrangling
#reading the data frum the given file into R, telling that each fields are separated by tabs and that there is a name of the column in the first line.
learning2014<-read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(learning2014)
#Studying the data by str() command and dim() command shows that it has 183 obs of 60 variables.
#The structure gives more details about these variables, dimensions give just 183 and 60, which means that there are 183 lines and 60 columns.
#Access the dplyr library
library(dplyr)
# Because some of the data is not yet in the final form, the deep, surface and strategic learning questions need to be combined.
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
#Combining these columns and creating their own column by averaging.
deep_columns <- select(learning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(strategic_columns)
#Choosing what columns are kept for analysis dataset
keep_columns<-c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
#Creating analysis dataset that includes gender, age, attitude, deep, stra, surf and points.
analysis_dataset <- select(learning2014, one_of(keep_columns))
str(analysis_dataset)
#Exclude observations where the exam points variable is 0.
analysis_dataset<-filter(analysis_dataset, Points>0)
#analysis of the dimensions of the filtered dataset.
dim(analysis_dataset)
#Saving the R.file into txt format. Before this the working directory has been changed to IODS-project and under Data folder.
write.table(analysis_dataset, file="learning2014.txt")
#Checking that txt file can be read and same dimensions are present (=166 and 7)
testing_txt<-read.table("learning2014.txt")
str(testing_txt)
head(testing_txt)
```{r}
# Week 2
In this week's R exercise we are making the regression analysis from the questionare data about students' learning methods (deep and surface learning) and attitudes toward the learning progress and study subject. The answers are scaled and combined together with final exam points, overall attitudes toward statistics, gender and age.
Before the analysis, we did data wrangling step (where the data table is converted into different type of file for analysis), and in this step the data was already filtered so that those answers that got 0 points are left out from the data table, the deep, strategic and learning question points were averiged and the attitude points were divided by the number of questions (about attitude).
**Tables 1-3. Data tables about summary of data and its structure.** Data table has seven different variables. The first variable is gender, which can be either female or male. The next one is age, and has integer value, as well as the exam points in the table. Other points in the table are averiged values from the multiple questions from that spesific topic.
```{r}
# Reading the data into R (students2014) from the  local data wrangling file (learning2014.txt). Setting the header=TRUE because file contains the names of the variables as its first line.
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
#Analysis of the data (structure and summary)
str(students2014)
head(students2014)
summary(students2014)
```
**Plot 1.** To summarize we have made a plot for attitude vs exam points. These results are divided on two colours based on the gender and lastly regression line is drawn to the plot to visualize if there is a gender difference.
```{r}
#Accessing libraries ggplot2 and GGally
library(ggplot2)
library(GGally)
#  Plot with ggplot (aes)
p1 <- ggplot(students2014, aes(x = attitude, y = points, col = gender))
#  point visualization
p2 <- p1 + geom_point()
# adding a regression line
p3 <- p2 + geom_smooth(method = "lm")
# adding a title and drawing the plot
p4 <- p3 + ggtitle("Student's attitude vs exam points")
# printing the plot
p4
```
**Plot 2.** Plot about the summaries of the variables in the data. In this plot there is easily seen the different relationships between the variables.
```{r}
# Drawing plot matrix with ggpairs()
p <- ggpairs(students2014, mapping = aes(col=gender, alpha=2), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
```
**Table 4.** In this table, there is actual linear regression model for multiple variables used. The exam points are the target of the analysis and it gives the model to us as well as the details about the residuals in the model. From coefficients we can see where it crosses the Y-axis (points, intercept) and the model also estimates for each variable, if it is significant from zero. In other words, does that variable make a difference to the points (P and t values). The attitude seems to have the highest impact to exam points between these three variables.
The multiple R squared of the model tells us how well this data fits into multiple linear regression model. It determines how well the residuals fit the theoretical model values. More we have outliers from the model, the lower we have R squared value of the model telling us that some other model would be needed to explain our data. In our case, it seems that there is quite a lot variability of the data, meaning that it is not that strong dependence on the exam points and between attitude, age and strategic learning.
```{r}
# creating a regression model with multiple explanatory variables
my_model <- lm(points ~ attitude + age + stra, data = students2014)
# print out a summary of the model
summary(my_model)
```
**Plot 3.** Analysis of these diagnostic plots shows in the first plot again how well the residuals are corresponding the model fitted values. It should be scattered and not showing any kind of trend in this plot. The second plot is about normal QQ which is normality of errors. It should show no trend again going on some direction from the trendline. The third plot is about the leverage and residuals, and it takes into account that some residuals might have a larger effect on a model fitting than other. For example, large values might have larger effect than smaller ones when regression curve is fitted.
```{r}
# drawing diagnostic plots with plot(). Choosing the plots 1, 2 and 5. Par to show multiple plots at the same time (room for four plots, only 3 used here)
par(mfrow=c(2,2))
plot(my_model, which=c(1:2,5))
# Week 2
In this week's R exercise we are making the regression analysis from the questionare data about students' learning methods (deep and surface learning) and attitudes toward the learning progress and study subject. The answers are scaled and combined together with final exam points, overall attitudes toward statistics, gender and age.
Before the analysis, we did data wrangling step (where the data table is converted into different type of file for analysis), and in this step the data was already filtered so that those answers that got 0 points are left out from the data table, the deep, strategic and learning question points were averiged and the attitude points were divided by the number of questions (about attitude).
**Tables 1-3. Data tables about summary of data and its structure.** Data table has seven different variables. The first variable is gender, which can be either female or male. The next one is age, and has integer value, as well as the exam points in the table. Other points in the table are averiged values from the multiple questions from that spesific topic.
```{r}
# Reading the data into R (students2014) from the  local data wrangling file (learning2014.txt). Setting the header=TRUE because file contains the names of the variables as its first line.
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
#Analysis of the data (structure and summary)
str(students2014)
head(students2014)
summary(students2014)
```
**Plot 1.** To summarize we have made a plot for attitude vs exam points. These results are divided on two colours based on the gender and lastly regression line is drawn to the plot to visualize if there is a gender difference.
```{r}
# Accessing libraries ggplot2 and GGally
library(ggplot2); library(GGally)
#  Plot with ggplot (aes)
p1 <- ggplot(students2014, aes(x = attitude, y = points, col = gender))
#  point visualization
p2 <- p1 + geom_point()
# adding a regression line
p3 <- p2 + geom_smooth(method = "lm")
# adding a title and drawing the plot
p4 <- p3 + ggtitle("Student's attitude vs exam points")
# printing the plot
p4
```
**Plot 2.** Plot about the summaries of the variables in the data. In this plot there is easily seen the different relationships between the variables.
```{r}
# Drawing plot matrix with ggpairs()
p <- ggpairs(students2014, mapping = aes(col=gender, alpha=2), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
```
**Table 4.** In this table, there is actual linear regression model for multiple variables used. The exam points are the target of the analysis and it gives the model to us as well as the details about the residuals in the model. From coefficients we can see where it crosses the Y-axis (points, intercept) and the model also estimates for each variable, if it is significant from zero. In other words, does that variable make a difference to the points (P and t values). The attitude seems to have the highest impact to exam points between these three variables.
The multiple R squared of the model tells us how well this data fits into multiple linear regression model. It determines how well the residuals fit the theoretical model values. More we have outliers from the model, the lower we have R squared value of the model telling us that some other model would be needed to explain our data. In our case, it seems that there is quite a lot variability of the data, meaning that it is not that strong dependence on the exam points and between attitude, age and strategic learning.
```{r}
# creating a regression model with multiple explanatory variables
my_model <- lm(points ~ attitude + age + stra, data = students2014)
# print out a summary of the model
summary(my_model)
```
**Plot 3.** Analysis of these diagnostic plots shows in the first plot again how well the residuals are corresponding the model fitted values. It should be scattered and not showing any kind of trend in this plot. The second plot is about normal QQ which is normality of errors. It should show no trend again going on some direction from the trendline. The third plot is about the leverage and residuals, and it takes into account that some residuals might have a larger effect on a model fitting than other. For example, large values might have larger effect than smaller ones when regression curve is fitted.
```{r}
# drawing diagnostic plots with plot(). Choosing the plots 1, 2 and 5. Par to show multiple plots at the same time (room for four plots, only 3 used here)
par(mfrow=c(2,2))
plot(my_model, which=c(1:2,5))
# Week 2
In this week's R exercise we are making the regression analysis from the questionare data about students' learning methods (deep and surface learning) and attitudes toward the learning progress and study subject. The answers are scaled and combined together with final exam points, overall attitudes toward statistics, gender and age.
Before the analysis, we did data wrangling step (where the data table is converted into different type of file for analysis), and in this step the data was already filtered so that those answers that got 0 points are left out from the data table, the deep, strategic and learning question points were averiged and the attitude points were divided by the number of questions (about attitude).
**Tables 1-3. Data tables about summary of data and its structure.** Data table has seven different variables. The first variable is gender, which can be either female or male. The next one is age, and has integer value, as well as the exam points in the table. Other points in the table are averiged values from the multiple questions from that spesific topic.
```{r}
# Reading the data into R (students2014) from the  local data wrangling file (learning2014.txt). Setting the header=TRUE because file contains the names of the variables as its first line.
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
#Analysis of the data (structure and summary)
str(students2014)
head(students2014)
summary(students2014)
```
**Plot 1.** To summarize we have made a plot for attitude vs exam points. These results are divided on two colours based on the gender and lastly regression line is drawn to the plot to visualize if there is a gender difference.
```{r}
# Accessing libraries ggplot2 and GGally
library(ggplot2); library(GGally)
#  Plot with ggplot (aes)
p1 <- ggplot(students2014, aes(x = attitude, y = points, col = gender))
#  point visualization
p2 <- p1 + geom_point()
# adding a regression line
p3 <- p2 + geom_smooth(method = "lm")
# adding a title and drawing the plot
p4 <- p3 + ggtitle("Student's attitude vs exam points")
# printing the plot
p4
```
**Plot 2.** Plot about the summaries of the variables in the data. In this plot there is easily seen the different relationships between the variables.
```{r}
# Drawing plot matrix with ggpairs()
p <- ggpairs(students2014, mapping = aes(col=gender, alpha=2), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
```
**Table 4.** In this table, there is actual linear regression model for multiple variables used. The exam points are the target of the analysis and it gives the model to us as well as the details about the residuals in the model. From coefficients we can see where it crosses the Y-axis (points, intercept) and the model also estimates for each variable, if it is significant from zero. In other words, does that variable make a difference to the points (P and t values). The attitude seems to have the highest impact to exam points between these three variables.
The multiple R squared of the model tells us how well this data fits into multiple linear regression model. It determines how well the residuals fit the theoretical model values. More we have outliers from the model, the lower we have R squared value of the model telling us that some other model would be needed to explain our data. In our case, it seems that there is quite a lot variability of the data, meaning that it is not that strong dependence on the exam points and between attitude, age and strategic learning.
```{r}
# creating a regression model with multiple explanatory variables
my_model <- lm(points ~ attitude + age + stra, data = students2014)
# print out a summary of the model
summary(my_model)
```
**Plot 3.** Analysis of these diagnostic plots shows in the first plot again how well the residuals are corresponding the model fitted values. It should be scattered and not showing any kind of trend in this plot. The second plot is about normal QQ which is normality of errors. It should show no trend again going on some direction from the trendline. The third plot is about the leverage and residuals, and it takes into account that some residuals might have a larger effect on a model fitting than other. For example, large values might have larger effect than smaller ones when regression curve is fitted.
```{r}
# drawing diagnostic plots with plot(). Choosing the plots 1, 2 and 5. Par to show multiple plots at the same time (room for four plots, only 3 used here)
par(mfrow=c(2,2))
plot(my_model, which=c(1:2,5))
```{r}
```{r}
```{r}
```{r}
```{r}
# Reading the data into R (students2014) from the  local data wrangling file (learning2014.txt). Setting the header=TRUE because file contains the names of the variables as its first line.
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
#Analysis of the data (structure and summary)
str(students2014)
head(students2014)
summary(students2014)
```{r}
p1 <- ggplot(students2014, aes(x =attitude, y =points, col = gender))
p1 <- ggplot(students2014, aes(x =attitude, y =points, col = gender))
# Week 2
In this week's R exercise we are making the regression analysis from the questionare data about students' learning methods (deep and surface learning) and attitudes toward the learning progress and study subject. The answers are scaled and combined together with final exam points, overall attitudes toward statistics, gender and age.
Before the analysis, we did data wrangling step (where the data table is converted into different type of file for analysis), and in this step the data was already filtered so that those answers that got 0 points are left out from the data table, the deep, strategic and learning question points were averiged and the attitude points were divided by the number of questions (about attitude).
**Tables 1-3. Data tables about summary of data and its structure.** Data table has seven different variables. The first variable is gender, which can be either female or male. The next one is age, and has integer value, as well as the exam points in the table. Other points in the table are averiged values from the multiple questions from that spesific topic.
```{r}
# Reading the data into R (students2014) from the  local data wrangling file (learning2014.txt). Setting the header=TRUE because file contains the names of the variables as its first line.
students2014<-read.table("~/Tiedostot_J/IODS-project/data/learning2014.txt", header=TRUE)
#Analysis of the data (structure and summary)
str(students2014)
head(students2014)
summary(students2014)
```
**Plot 1.** To summarize we have made a plot for attitude vs exam points. These results are divided on two colours based on the gender and lastly regression line is drawn to the plot to visualize if there is a gender difference.
```{r}
# Accessing libraries ggplot2 and GGally
library(ggplot2); library(GGally)
#  Plot with ggplot (aes)
p1 <- ggplot(students2014, aes(x =attitude, y =points, col = gender))
#  point visualization
p2 <- p1 + geom_point()
# adding a regression line
p3 <- p2 + geom_smooth(method = "lm")
# adding a title and drawing the plot
p4 <- p3 + ggtitle("Student's attitude vs exam points")
# printing the plot
p4
```
**Plot 2.** Plot about the summaries of the variables in the data. In this plot there is easily seen the different relationships between the variables.
```{r}
# Drawing plot matrix with ggpairs()
p <- ggpairs(students2014, mapping = aes(col=gender, alpha=2), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
```
**Table 4.** In this table, there is actual linear regression model for multiple variables used. The exam points are the target of the analysis and it gives the model to us as well as the details about the residuals in the model. From coefficients we can see where it crosses the Y-axis (points, intercept) and the model also estimates for each variable, if it is significant from zero. In other words, does that variable make a difference to the points (P and t values). The attitude seems to have the highest impact to exam points between these three variables.
The multiple R squared of the model tells us how well this data fits into multiple linear regression model. It determines how well the residuals fit the theoretical model values. More we have outliers from the model, the lower we have R squared value of the model telling us that some other model would be needed to explain our data. In our case, it seems that there is quite a lot variability of the data, meaning that it is not that strong dependence on the exam points and between attitude, age and strategic learning.
```{r}
# creating a regression model with multiple explanatory variables
my_model <- lm(points ~ attitude + age + stra, data = students2014)
# print out a summary of the model
summary(my_model)
```
**Plot 3.** Analysis of these diagnostic plots shows in the first plot again how well the residuals are corresponding the model fitted values. It should be scattered and not showing any kind of trend in this plot. The second plot is about normal QQ which is normality of errors. It should show no trend again going on some direction from the trendline. The third plot is about the leverage and residuals, and it takes into account that some residuals might have a larger effect on a model fitting than other. For example, large values might have larger effect than smaller ones when regression curve is fitted.
```{r}
# drawing diagnostic plots with plot(). Choosing the plots 1, 2 and 5. Par to show multiple plots at the same time (room for four plots, only 3 used here)
par(mfrow=c(2,2))
plot(my_model, which=c(1:2,5))
# Accessing libraries ggplot2 and GGally
library(ggplot2); library(GGally)
#  Plot with ggplot (aes)
p1 <- ggplot(students2014, aes(x =attitude, y =points, col = gender))
#  point visualization
p2 <- p1 + geom_point()
# adding a regression line
p3 <- p2 + geom_smooth(method = "lm")
# adding a title and drawing the plot
p4 <- p3 + ggtitle("Student's attitude vs exam points")
# printing the plot
p4
p1 <- ggplot(students2014, aes(x ="attitude", y =points, col = gender))
# Accessing libraries ggplot2 and GGally
library(ggplot2); library(GGally)
#  Plot with ggplot (aes)
p1 <- ggplot(students2014, aes(x ="attitude", y =points, col = gender))
#  point visualization
p2 <- p1 + geom_point()
# adding a regression line
p3 <- p2 + geom_smooth(method = "lm")
# adding a title and drawing the plot
p4 <- p3 + ggtitle("Student's attitude vs exam points")
# printing the plot
p4
# Drawing plot matrix with ggpairs()
p <- ggpairs(students2014, mapping = aes(col=gender, alpha=2), lower = list(combo = wrap("facethist", bins = 20)))
# draw the plot
p
p1 <- ggplot(students2014, aes(x =attitude, y =points, col = gender))
